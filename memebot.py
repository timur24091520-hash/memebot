import telebot
from PIL import Image, ImageDraw, ImageFont
import os
import textwrap

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏ —É @BotFather)
BOT_TOKEN = 'YOUR_BOT_TOKEN_HERE'

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –ü–∞–ø–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
TEMP_DIR = 'temp'
if not os.path.exists(TEMP_DIR):
    os.makedirs(TEMP_DIR)

def create_meme(image_path, top_text="", bottom_text=""):
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–º –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º"""
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image = Image.open(image_path)
    draw = ImageDraw.Draw(image)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    width, height = image.size
    
    # –í—ã–±–∏—Ä–∞–µ–º —à—Ä–∏—Ñ—Ç (—Ä–∞–∑–º–µ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    font_size = min(width, height) // 10
    try:
        # –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à—Ä–∏—Ñ—Ç
        font = ImageFont.truetype("arial.ttf", font_size)
    except:
        # –ï—Å–ª–∏ —à—Ä–∏—Ñ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
        font = ImageFont.load_default()
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    def add_text(text, position):
        if not text:
            return
            
        # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏
        avg_char_width = font_size * 0.6
        max_chars = int(width / avg_char_width)
        wrapped_text = textwrap.fill(text, width=max_chars)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞
        bbox = draw.textbbox((0, 0), wrapped_text, font=font)
        text_width = bbox[2] - bbox[0]
        text_height = bbox[3] - bbox[1]
        
        # –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        if position == "top":
            x = (width - text_width) / 2
            y = 10
        else:  # bottom
            x = (width - text_width) / 2
            y = height - text_height - 10
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–≤–æ–¥–∫—É –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        outline_range = 2
        for dx in range(-outline_range, outline_range + 1):
            for dy in range(-outline_range, outline_range + 1):
                if dx != 0 or dy != 0:
                    draw.text((x + dx, y + dy), wrapped_text, font=font, fill="black")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
        draw.text((x, y), wrapped_text, font=font, fill="white")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤–µ—Ä—Ö–Ω–∏–π –∏ –Ω–∏–∂–Ω–∏–π —Ç–µ–∫—Å—Ç
    add_text(top_text, "top")
    add_text(bottom_text, "bottom")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    output_path = os.path.join(TEMP_DIR, "meme_result.jpg")
    image.save(output_path, "JPEG")
    
    return output_path

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ start –∏ help"""
    welcome_text = """
ü§ñ –ë–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–æ–≤!

üì∏ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
1. –û—Ç–ø—Ä–∞–≤—å –∫–∞—Ä—Ç–∏–Ω–∫—É
2. –í –ø–æ–¥–ø–∏—Å–∏ –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç
3. –ë–æ—Ç —Å–æ–∑–¥–∞—Å—Ç –º–µ–º!

üí° –ü—Ä–∏–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞:
- –û–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞: "–¢–µ–∫—Å—Ç –º–µ–º–∞"
- –î–≤–µ —Å—Ç—Ä–æ–∫–∏: "–í–µ—Ä—Ö–Ω–∏–π —Ç–µ–∫—Å—Ç\\n–ù–∏–∂–Ω–∏–π —Ç–µ–∫—Å—Ç"
- –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å \\n –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–≥–æ –∏ –Ω–∏–∂–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞

üé® –¢–µ–∫—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    """
    bot.reply_to(message, welcome_text)

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ"""
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        processing_msg = bot.reply_to(message, "üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ (–±–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)
        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        input_path = os.path.join(TEMP_DIR, f"input_{message.message_id}.jpg")
        with open(input_path, 'wb') as new_file:
            new_file.write(downloaded_file)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–¥–ø–∏—Å–∏
        caption = message.caption or ""
        
        # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –≤–µ—Ä—Ö–Ω–∏–π –∏ –Ω–∏–∂–Ω–∏–π
        if "\\n" in caption:
            parts = caption.split("\\n", 1)
            top_text = parts[0].strip()
            bottom_text = parts[1].strip() if len(parts) > 1 else ""
        else:
            top_text = caption
            bottom_text = ""
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–º
        output_path = create_meme(input_path, top_text, bottom_text)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        with open(output_path, 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption="üéâ –í–∞—à –º–µ–º –≥–æ—Ç–æ–≤!")
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        bot.delete_message(message.chat.id, processing_msg.message_id)
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        os.remove(input_path)
        os.remove(output_path)
        
    except Exception as e:
        bot.reply_to(message, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        try:
            if 'input_path' in locals() and os.path.exists(input_path):
                os.remove(input_path)
            if 'output_path' in locals() and os.path.exists(output_path):
                os.remove(output_path)
        except:
            pass

@bot.message_handler(func=lambda message: True)
def handle_text(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if message.text and not message.text.startswith('/'):
        bot.reply_to(message, "üì∏ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –ø–æ–¥–ø–∏—Å–∏, –∏ —è —Å–¥–µ–ª–∞—é –∏–∑ –Ω–µ–µ –º–µ–º!")

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
